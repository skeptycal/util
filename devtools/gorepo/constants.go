package gorepo

const ( // for gorepo.go
	goTestTemplate = `#!/usr/bin/env bash

set -e
echo "" >| coverage.txt

for d in $(go list ./... | grep -v vendor); do
    go test -race -coverprofile=profile.out -covermode=atomic "$d"
    if [ -f profile.out ]; then
        cat profile.out >> coverage.txt
        rm profile.out
    fi
done
`
)

const ( // for gitignore.go

	// defaultGitignoreItems is a list of personal prefernces to download from the www.gitignore.io API
	defaultGitIgnoreItemsComma = `macos,linux,windows,ssh,vscode,go,zsh,node,vue,nuxt,python,django`
	defaultGitIgnoreItemsSpace = "macos linux windows ssh vscode go zsh node vue nuxt python django"
	urlGitIgnoreAPIList        = `https://www.toptal.com/developers/gitignore/api/list`
	urlGitIgnoreAPIPrefix      = `https://www.toptal.com/developers/gitignore/api/`

	// personalPreferenceItems is a list of personal preferences in addition to the www.gitignore.io API
	personalPreferenceItems = `
ideas
notes.md
`
	repoSpecificItems = `# used by go.test.sh
coverage.txt
profile.out
`

	// Template used for .gitignore file. There are three variables. They are, in order:
	// 1. repo name
	// 2. personal preference items
	// 3. automated gitignore.io items
	giFormatString = `# %s .gitignore file

# --> This file is automatically generated <--

# Repo Specific Items:
%s

# Personal Preference Items
%s

# generic secure items
*ssh*
*_rsa*
*token
*[Pp]rivate*
*[Ss]ecret*
*[Tt]oken*

# generic items
**/*/node_modules/
*[Bb]ak
*temp
**/*/[Bb]ak/
temp/
*history*
*hst*

# .gitignore contents from gitignore.io API
%s

`
)
